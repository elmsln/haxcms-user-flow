import{r as t,$ as e}from"./f9a63054.js";import{H as o,b as i,t as a,s}from"./d7fd6eb5.js";import{a as l}from"./201b7bb0.js";import"./c0469ffa.js";import{normalizeEventPath as r,wipeSlot as n}from"./b78a3bce.js";import{I18NMixin as d}from"./29b617f1.js";import"./f35d5117.js";import"./a40c9b2a.js";import"./b9bb5cf7.js";import"./f12c4254.js";class c extends(d(l(s))){constructor(){super(),this.disableOps=!1,this.hasActiveEditingElement=!1,this.haxUIElement=!0,this.tourName="hax",this.trayDetail="content-edit",this.trayStatus="collapsed",this.t={edit:"Edit",dragHandle:"Drag handle",moveUp:"Move up",moveDown:"Move down",addColumn:"Add column",removeColumn:"Remove column",remove:"Remove",duplicate:"Duplicate",confirmDelete:"Confirm delete",changeTo:"Change to",modifyHTMLSource:"Modify HTML source",clickToChange:"Click to change",regions:"Available regions",insertItemAbove:"Insert item above",insertItemAboveOrBelow:"Insert item above or below",insertItemBelow:"Insert item below",selectLayout:"Select Layout Element"},this.registerLocalization({context:this,namespace:"hax"}),this.ceButtons=[],this.activeTagName="",this.activeTagIcon="hax:paragraph",this.addEventListener("hax-context-item-selected",this.handleCECustomEvent.bind(this))}static get tag(){return"hax-plate-context"}static get styles(){return[...super.styles,t`:host{width:calc(100% - 2px);align-items:stretch;border:1px solid var(--hax-ui-border-color)}hax-toolbar::part(morebutton){--simple-toolbar-button-color:var(--hax-ui-color);--simple-toolbar-button-bg:var(--hax-ui-background-color);--simple-toolbar-button-border-color:var(--hax-ui-border-color);--simple-toolbar-button-border-width:1px;--simple-toolbar-button-hover-color:var(--hax-ui-color);--simple-toolbar-button-hover-bg:var(
            --hax-ui-background-color-secondary
          );--simple-toolbar-button-toggled-color:var(--hax-ui-color-accent);--simple-toolbar-button-toggled-bg:var(--hax-ui-background-color);--simple-toolbar-button-toggled-border-color:var(
            --hax-ui-color-accent
          );--simple-toolbar-button-disabled-opacity:1;--simple-toolbar-button-disabled-color:var(--hax-ui-disabled-color);--simple-toolbar-button-disabled-bg:var(--hax-ui-background-color);--simple-toolbar-button-disabled-border-color:unset;--simple-toolbar-border-radius:0;align-self:flex-end;justify-self:stretch;margin:0 -2px 0 2px}#remove{max-width:44px;overflow:visible}hax-toolbar{max-width:calc(100% - 2px);display:flex;align-items:stretch;justify-content:flex-start}.group{display:flex;align-items:stretch;flex:0 0 auto;justify-content:center;border:1px solid var(--rich-text-editor-border-color,#ddd);padding:0;border-width:1px;margin:-1px}.group,.group>*{z-index:1}.group:empty{display:none}.group>*,:host([collapsed]) .group{flex:0 0 auto}.group :not([toggled])::part(button){border-color:transparent}:host .group:focus,:host .group:focus-within,:host .group>:focus,:host .group>:focus-within{z-index:2}:host .group:hover,:host .group>:hover{z-index:3}.first-slot{border-top:1px solid #000}`]}render(){return e` <hax-toolbar> <div class="group"> <hax-toolbar-menu ?disabled="${this.hasActiveEditingElement||!this.canMoveElement||this.viewSource}" id="drag" action icon="hax:arrow-all" label="${this.t.dragHandle}" draggable="true" reset-on-select data-simple-tour-stop data-stop-title="label" ?hidden="${!this.canMoveElement||this.disableOps}"> <simple-toolbar-menu-item slot="menuitem"> <hax-context-item action align-horizontal="left" ?disabled="${this.hasActiveEditingElement}" show-text-label role="menuitem" icon="hax:keyboard-arrow-up" label="${this.t.moveUp}" event-name="hax-plate-up"></hax-context-item> </simple-toolbar-menu-item> <simple-toolbar-menu-item slot="menuitem"> <hax-context-item action align-horizontal="left" ?disabled="${this.hasActiveEditingElement}" role="menuitem" show-text-label icon="hax:keyboard-arrow-down" label="${this.t.moveDown}" event-name="hax-plate-down"></hax-context-item> </simple-toolbar-menu-item> ${(this.siblingSlots||[]).map(((t,o)=>e` <simple-toolbar-menu-item slot="menuitem" class="move-to-slot ${o<1?"first-slot":""}"> <hax-context-item action align-horizontal="left" ?disabled="${this.activeNode&&t.slot===this.activeNode.slot}" show-text-label role="menuitem" data-slot="${t.slot}" event-name="move-to-slot" label="${t.title||t.slot}"></hax-context-item> </simple-toolbar-menu-item> `))} <div slot="tour" data-stop-content> Click the drag handle once to show a menu to just move up or down one item in the content OR click and drag to place the item exactly where you want it to go. </div> </hax-toolbar-menu> <hax-toolbar-menu action align-horizontal="left" ?disabled="${this.viewSource}" ?hidden="${!this.isGridLayoutSlot&&this.childSlots.length<1}" icon="hax:select-element" label="${this.t.selectLayout}"> <simple-toolbar-menu-item slot="menuitem"> <hax-context-item action align-horizontal="left" ?disabled="${this.viewSource}" ?hidden="${!this.isGridLayoutSlot}" .icon="${this.gridIcon}" label="${this.gridLabel}" event-name="hax-select-grid-item" .eventData="${this.isGridLayoutSlot?this.activeNode.parentNode:void 0}" role="menuitem" show-text-label> </hax-context-item> </simple-toolbar-menu-item> ${(this.slottedItems||[]).map(((t,o)=>t.items.map(((o,i)=>e` <simple-toolbar-menu-item slot="menuitem"> <hax-context-item action align-horizontal="left" ?disabled="${this.viewSource||this.activeNode===o}" label="${t.label}${t.items.length>1?` (${i+1})`:""}" event-name="hax-select-grid-item" .eventData="${o}" role="menuitem" show-text-label> </hax-context-item> </simple-toolbar-menu-item> `))))} </hax-toolbar-menu> <slot name="primary"></slot> <hax-toolbar-menu icon="add-box" label="${this.t.insertItemAboveOrBelow}" ?disabled="${this.viewSource||this.disableOps}"> <simple-toolbar-menu-item slot="menuitem"> <hax-context-item action align-horizontal="left" show-text-label role="menuitem" icon="hardware:keyboard-arrow-up" event-name="insert-above-active" label="${this.t.insertItemAbove}"></hax-context-item> </simple-toolbar-menu-item> <simple-toolbar-menu-item slot="menuitem"> <hax-context-item action align-horizontal="left" show-text-label role="menuitem" icon="hardware:keyboard-arrow-down" event-name="insert-below-active" label="${this.t.insertItemBelow}" ?disabled="${this.viewSource}"></hax-context-item> </simple-toolbar-menu-item> ${(this.childSlots||[]).map(((t,o)=>e` <simple-toolbar-menu-item slot="menuitem" class="move-to-slot ${o<1?"first-slot":""}"> <hax-context-item action align-horizontal="left" ?disabled="${this.activeNode&&t.slot===this.activeNode.slot}" show-text-label role="menuitem" event-name="insert-into-active" data-slot="${t.slot}" label="${t.title||t.slot}"></hax-context-item> </simple-toolbar-menu-item> `))} </hax-toolbar-menu> <hax-context-item action ?disabled="${this.hasActiveEditingElement||this.viewSource||this.disableOps}" label="${this.t.duplicate}" icon="icons:content-copy" event-name="hax-plate-duplicate" data-simple-tour-stop data-stop-title="label"> <div slot="tour" data-stop-content> Duplicate the active piece of content and place it below the current item. </div> </hax-context-item> </div> <hax-context-item action icon="delete" ?disabled="${this.hasActiveEditingElement||this.viewSource||this.disableOps}" icon="delete" label="${this.t.remove}" event-name="hax-plate-delete" data-simple-tour-stop data-stop-title="label"> <div slot="tour" data-stop-content> Delete the current item. You can always use the undo arrow to bring this back. </div> </hax-context-item> ${this.ceButtons.map((t=>e` <hax-context-item action icon="${t.icon}" label="${t.label}" event-name="hax-ce-custom-button" value="${t.callback}" ?disabled="${t.disabled}"></hax-context-item>`))} <hax-context-item action id="right" class="paddle" icon="hax:table-column-remove" label="${this.t.addColumn}" ?disabled="${this.hasActiveEditingElement||this.viewSource||this.disableOps}" event-name="hax-plate-create-right" data-simple-tour-stop data-stop-title="label"> <div slot="tour" data-stop-content> Add a column to split the current column into two pieces. This can be done up to six pieces columns. For differnet layouts see Grid settings panel. </div> </hax-context-item> <hax-context-item action class="paddle" icon="hax:table-column-plus-after" label="${this.t.removeColumn}" ?disabled="${this.hasActiveEditingElement||this.viewSource||this.disableOps}" event-name="hax-plate-remove-right" ?hidden="${!this.isGridPlate()}" id="rightremove" data-simple-tour-stop data-stop-title="label"> <div slot="tour" data-stop-content> Remove a column from the split column layout. If at two columns and removing it will remove the layout split and make it 100% width. </div> </hax-context-item> <slot name="secondary"></slot>  <div class="group"> <hax-context-item action more label="${this.t.changeTo}..." tooltip="${this.activeTagName}, ${this.t.clickToChange}" ?disabled="${this.disableTransform||this.viewSource||this.disableOps}" event-name="hax-transform-node"></hax-context-item> <hax-context-item action icon="icons:code" label="${this.t.modifyHTMLSource}" ?disabled="${!this.sourceView}" event-name="hax-source-view-toggle" toggles ?toggled="${this.viewSource}"></hax-context-item> <slot name="more"></slot> <hax-context-item icon="build" action align-horizontal="left" ?disabled="${this.hasActiveEditingElement||this.viewSource}" label="${this.t.edit}" data-simple-tour-stop data-stop-title="label" event-name="content-edit" toggles ?toggled="${"content-edit"===this.trayDetail&&"collapsed"!==this.trayStatus}"> <div slot="tour" data-stop-content> Opens the Edit panel for more advanced settings. </div> </hax-context-item> </div> </hax-toolbar> `}get childSlots(){let t=this.isGridPlate(),e=this.activeNode?o.haxSchemaFromTag(this.activeNode.tagName):void 0;return t?this.gridPlateSlots(this.activeNode.layout):o.isGridPlateElement(this.activeNode)?o.slotsFromSchema(e||{}):[]}get siblingSlots(){if(!this.activeNode||!this.activeNode.parentNode)return[];return this.isGridPlate(this.activeNode.parentNode)?this.gridPlateSlots(this.activeNode.parentNode.layout):o.isGridPlateElement(this.activeNode.parentNode)?o.slotsFromSchema(this.parentSchema||{}):[]}getSlottedItems(t,e=[]){return t?e.map((e=>({slot:e.slot,label:e.title||e.slot,items:[...t.querySelectorAll(`[slot=${e.slot}]`)]}))):[]}get slottedItems(){return this.activeNode?this.isGridPlate()?this.getSlottedItems(this.activeNode,this.childSlots):this.getSlottedItems(this.activeNode.parentNode,this.siblingSlots):[]}get gridIcon(){return this.gridProperties?this.gridProperties.icon:void 0}get gridLabel(){return this.gridProperties?this.gridProperties.title||this.gridProperties.tag:""}get gridProperties(){return this.isGridLayoutSlot&&this.parentSchema.gizmo?this.parentSchema.gizmo:void 0}get filteredBlocks(){return this.getFilteredBlocks(this.formatBlocks)}get isGridLayoutSlot(){return!(!this.activeNode||!this.activeNode.parentNode)&&o.isGridPlateElement(this.activeNode.parentNode)}isGridPlate(t=this.activeNode){return t&&t.tagName&&"GRID-PLATE"===t.tagName}gridPlateSlots(t="1-1-1-1-1-1"){let e=t.split("-");return e=e.map(((t,e)=>(t=>({slot:`col-${t}`,title:`Column ${t}`,excludedSlotWrappers:["grid-plate"]}))(e+1))),e}__updatePlatePosition(t){let e=this.shadowRoot.querySelector("#right"),o=this.shadowRoot.querySelector("#rightremove");e.disabled=!1,o.disabled=!1,t&&"GRID-PLATE"==t.tagName?"1-1-1-1-1-1"==t.layout&&(e.disabled=!0):o.disabled=!0}__dblClickFire(t){"remove"===t.target.id&&this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:{target:t.target,eventName:"hax-plate-delete",value:t.target.value}}))}_handleOpen(t){this.dispatchEvent(new CustomEvent("hax-transform-node",{bubbles:!0,cancelable:!0,composed:!0,detail:o.elementList[el]}))}handleCECustomEvent(t){let e=t.detail;if("hax-ce-custom-button"===e.eventName)this.activeNode&&"function"==typeof this.activeNode[e.value]&&this.activeNode[e.value](t)&&o.refreshActiveNodeForm()}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{"onScreen"===e&&this.onScreen&&this._resetCEMenu(),"formatBlocks"===e&&(this.disableTransform=this.filteredBlocks.length<1)}))}firstUpdated(t){super.firstUpdated(t),i((()=>{this.activeNode=a(o.activeNode),this.activeNode&&this.activeNode.classList&&this._resetCEMenu(),this.activeNode&&this.getAttribute("on-screen")&&this.__updatePlatePosition(this.activeNode)})),i((()=>{a(o.activeEditingElement)?this.hasActiveEditingElement=!0:this.hasActiveEditingElement=!1})),this.shadowRoot.querySelector("#drag").addEventListener("dragstart",this._dragStart),this.shadowRoot.querySelector("#drag").addEventListener("dragend",this._dragEnd)}_dragEnd(t){let e=r(t)?r(t)[0]:void 0;e&&e.close(!0),o._lockContextPosition=!1}_dragStart(t){let e=a(o.activeNode),i=r(t)?r(t)[0]:void 0;i&&i.close(!0),o.__dragTarget=e,o._lockContextPosition=!0,o.activeHaxBody.__activeHover=null,o.activeHaxBody._hideContextMenu(o.activeHaxBody.contextMenus.add),t.dataTransfer&&(t.dataTransfer.effectAllowed="move",t.dataTransfer.dropEffect="move",t.dataTransfer.setDragImage(e,-20,-20)),t.stopPropagation(),t.stopImmediatePropagation()}async _resetCEMenu(){if(this.shadowRoot&&n(this,"*"),this.ceButtons=[],o.activeHaxBody&&null!=this.activeNode){let t=o.haxSchemaFromTag(this.activeNode.tagName);if(this.sourceView=t.canEditSource,this.activeNode){let t=await o.activeHaxBody.replaceElementWorkflow(this.activeNode,!0)||[],e=this.activeNode&&this.activeNode.tagName?this.activeNode.tagName.toLowerCase():void 0,i=o.activeHaxBody.primitiveTextBlocks.includes(e)?"p":void 0;this.formatBlocks=e?t.filter((t=>t.tag&&![e,i].includes(t.tag))):t,this.disableTransform=0===this.filteredBlocks.length}o.activeGizmo&&(this.activeTagName=o.activeGizmo.title,this.activeTagIcon=o.activeGizmo.icon)}else o.activeGizmo?(this.activeTagName=o.activeGizmo.title,this.activeTagIcon=o.activeGizmo.icon):(this.activeTagName="",this.activeTagIcon="");await o.runHook(this.activeNode,"inlineContextMenu",[this])}static get properties(){return{...super.properties,activeTagIcon:{type:String},activeTagName:{type:String},disableOps:{type:Boolean},canMoveElement:{type:Boolean},ceButtons:{type:Array},disableTransform:{type:Boolean},hasActiveEditingElement:{type:Boolean},onScreen:{type:Boolean,attribute:"on-screen",reflect:!0},sourceView:{type:Boolean},formatBlocks:{type:Array},trayDetail:{type:String,reflect:!0,attribute:"tray-detail"},trayStatus:{type:String,reflect:!0,attribute:"tray-status"}}}}window.customElements.define(c.tag,c);export{c as HaxPlateContext};
