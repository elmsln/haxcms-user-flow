import{S as e,a as t,r as s,A as r,l as a,b as o,$ as i}from"./c6fb384b.js";import"./5c88e02d.js";class n extends e{static get tag(){return"app-hax-site-login"}constructor(){super(),this.username="",this.password="",this.errorMSG="Enter User name",this.hidePassword=!0}static get properties(){return{...super.properties,username:{type:String},password:{type:String},errorMSG:{type:String},hidePassword:{type:Boolean}}}firstUpdated(){super.firstUpdated(),setTimeout((()=>{t.appEl.playSound("coin"),this.shadowRoot.querySelector("input").focus()}),0)}static get styles(){return[...super.styles,s`:host{display:flex;flex-direction:column;justify-content:center;align-items:center}#inputcontainer{display:flex;flex-direction:column;justify-content:center;align-items:center}a{color:red}// This does not work #errorText>p{visibility:hidden;background-color:#add8e6;color:red;font-weight:700}rpg-character{display:block;margin:10px}.external{text-align:center}`]}checkUsername(){const e=this.shadowRoot.querySelector("#username").value;this.hidePassword=!1,this.errorMSG="",this.username=e,t.appEl.playSound("click"),setTimeout((()=>{this.shadowRoot.querySelector("input").focus()}),0)}async checkPassword(){t.appEl.playSound("click2");const e=this.shadowRoot.querySelector("#password").value,s=await r.makeCall("login",{username:this.username,password:e});200!==s.status_code?(this.hidePassword=!0,this.errorMSG="Invalid Username or Password",t.appEl.playSound("error")):(a("jwt",s.jwt),o((()=>{t.user={name:this.username}})),t.appEl.playSound("success"),t.jwt=s.jwt,this.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}})),t.toast(`Welcome ${this.username}! Let's go!`,5e3,{hat:"construction"}))}reset(){this.errorMSG="",this.username="",this.hidePassword=!0}nameChange(){t.appEl.playSound("click"),this.username=this.shadowRoot.querySelector("#username").value}render(){return i` <rpg-character seed="${this.username}"></rpg-character> <div id="inputcontainer"> ${this.hidePassword?i`<input id="username" type="text" placeholder="abc123@psu.edu" @input="${this.nameChange}"> <button @click="${this.checkUsername}">next</button>`:i`<p> Hey ${this.username}! <a @click="${this.reset}">not you?</a></p><input id="password" type="text" placeholder="insert password here"> <button @click="${this.checkPassword}">Login</button>`} <div class="external"> <slot name="externalproviders"></slot> </div> </div> <p id="errorText">${this.errorMSG}</p> `}}customElements.define(n.tag,n);export{n as AppHaxSiteLogin};
